{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinai\\\\Desktop\\\\pet-projects\\\\react-node-mongodb-todo-app\\\\frontend\\\\src\\\\components\\\\TodoList\\\\TodoList.js\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Todo from '../Todo/Todo';\nimport styles from './TodoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList(_ref) {\n  let {\n    todos,\n    deleteTodo,\n    isSun,\n    toggleTodo,\n    filter\n  } = _ref;\n  let message = '';\n  if (filter === 'All' && todos.length === 0) {\n    message = 'Todo list is empty';\n  } else if (filter === 'Active' && todos.every(todo => todo.isCompleted)) {\n    message = 'No active todo';\n  } else if (filter === 'Completed' && todos.every(todo => !todo.isCompleted)) {\n    message = 'No completed todo';\n  }\n  function handleDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    // Отримання початкового та кінцевого індексів перетягування\n    const sourceIndex = result.source.index;\n    const destinationIndex = result.destination.index;\n\n    // Оновлення порядку задач у стані або виклик функції для оновлення на сервері\n    // ...\n  }\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"todoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c = TodoList;\nexport default TodoList;\n{\n  /* <>\r\n  {message ? (\r\n  <h2 className={styles.message}>{message}</h2>\r\n  ) : (\r\n  todos.map((todo, index) => (\r\n      <Todo\r\n          key={todo.id}\r\n          todo={todo}\r\n          deleteTodo={deleteTodo}\r\n          toggleTodo={toggleTodo}\r\n          isFirstTodo={index === 0}\r\n          isSun={isSun}\r\n      />\r\n  ))\r\n  )}\r\n  </> */\n}\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["DragDropContext","Droppable","Draggable","Todo","styles","jsxDEV","_jsxDEV","TodoList","_ref","todos","deleteTodo","isSun","toggleTodo","filter","message","length","every","todo","isCompleted","handleDragEnd","result","destination","sourceIndex","source","index","destinationIndex","onDragEnd","children","droppableId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zinai/Desktop/pet-projects/react-node-mongodb-todo-app/frontend/src/components/TodoList/TodoList.js"],"sourcesContent":["import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport Todo from '../Todo/Todo';\r\n\r\nimport styles from './TodoList.module.css';\r\n\r\nfunction TodoList({ todos, deleteTodo, isSun, toggleTodo, filter }) {\r\n    let message = '';\r\n\r\n    if (filter === 'All' && todos.length === 0) {\r\n        message = 'Todo list is empty';\r\n    } else if (filter === 'Active' && todos.every((todo) => todo.isCompleted)) {\r\n        message = 'No active todo';\r\n    } else if (\r\n        filter === 'Completed' &&\r\n        todos.every((todo) => !todo.isCompleted)\r\n    ) {\r\n        message = 'No completed todo';\r\n    }\r\n\r\n    function handleDragEnd(result) {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        // Отримання початкового та кінцевого індексів перетягування\r\n        const sourceIndex = result.source.index;\r\n        const destinationIndex = result.destination.index;\r\n\r\n        // Оновлення порядку задач у стані або виклик функції для оновлення на сервері\r\n        // ...\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n            <Droppable droppableId=\"todoList\"></Droppable>\r\n        </DragDropContext>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n\r\n{\r\n    /* <>\r\n{message ? (\r\n    <h2 className={styles.message}>{message}</h2>\r\n) : (\r\n    todos.map((todo, index) => (\r\n        <Todo\r\n            key={todo.id}\r\n            todo={todo}\r\n            deleteTodo={deleteTodo}\r\n            toggleTodo={toggleTodo}\r\n            isFirstTodo={index === 0}\r\n            isSun={isSun}\r\n        />\r\n    ))\r\n)}\r\n</> */\r\n}\r\n"],"mappings":";AAAA,SAASA,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAE3E,OAAOC,IAAI,MAAM,cAAc;AAE/B,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAAC,IAAA,EAAmD;EAAA,IAAlD;IAAEC,KAAK;IAAEC,UAAU;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAAL,IAAA;EAC9D,IAAIM,OAAO,GAAG,EAAE;EAEhB,IAAID,MAAM,KAAK,KAAK,IAAIJ,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE;IACxCD,OAAO,GAAG,oBAAoB;EAClC,CAAC,MAAM,IAAID,MAAM,KAAK,QAAQ,IAAIJ,KAAK,CAACO,KAAK,CAAEC,IAAI,IAAKA,IAAI,CAACC,WAAW,CAAC,EAAE;IACvEJ,OAAO,GAAG,gBAAgB;EAC9B,CAAC,MAAM,IACHD,MAAM,KAAK,WAAW,IACtBJ,KAAK,CAACO,KAAK,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,WAAW,CAAC,EAC1C;IACEJ,OAAO,GAAG,mBAAmB;EACjC;EAEA,SAASK,aAAaA,CAACC,MAAM,EAAE;IAC3B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;MACrB;IACJ;;IAEA;IACA,MAAMC,WAAW,GAAGF,MAAM,CAACG,MAAM,CAACC,KAAK;IACvC,MAAMC,gBAAgB,GAAGL,MAAM,CAACC,WAAW,CAACG,KAAK;;IAEjD;IACA;EACJ;;EAEA,oBACIlB,OAAA,CAACN,eAAe;IAAC0B,SAAS,EAAEP,aAAc;IAAAQ,QAAA,eACtCrB,OAAA,CAACL,SAAS;MAAC2B,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAE1B;AAACC,EAAA,GAhCQ1B,QAAQ;AAkCjB,eAAeA,QAAQ;AAEvB;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfI;AAgBH,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}